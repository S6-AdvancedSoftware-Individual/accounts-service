name: Release to AKS
on:
  push:
    branches: [main]
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./CockatooGateway
          file: ./CockatooGateway/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO_GATEWAY }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO_GATEWAY }}:${{ github.sha }}

  deploy-to-aks:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3

      - name: Authenticate to AKS
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f cockatoo-gateway-deployment.yaml
          kubectl apply -f cockatoo-gateway-service.yaml
          kubectl apply -f cockatoo-gateway-hpa.yaml

      - name: Deploy new image
        run: |
          kubectl set image deployment/${{ secrets.DEPLOYMENT_NAME }} ${{ secrets.CONTAINER_NAME }}=${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKER_REPO_GATEWAY }}:${{ github.sha }} --namespace=${{ secrets.NAMESPACE }}

      - name: Verify rollout
        run: |
          kubectl rollout status deployment/${{ secrets.DEPLOYMENT_NAME }} --namespace=${{ secrets.NAMESPACE }} --timeout=2m
